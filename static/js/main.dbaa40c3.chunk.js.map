{"version":3,"sources":["Helpers/Contexts.js","Components/MainMenu.js","Helpers/QuestionBank.js","Components/Quiz.js","Components/EndScreen.js","App.js","reportWebVitals.js","index.js"],"names":["GameStateContext","createContext","MainMenu","useContext","setGameState","gameState","setUserName","userName","className","type","placeholder","onChange","event","target","value","onClick","QuestionBank","prompt","optionA","optionB","optionC","optionD","answer","Quiz","useState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","score","setScore","chooseOption","option","length","id","EndScreen","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbaa40c3.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const GameStateContext = createContext(\"\");","import \"../App.css\";\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../Helpers/Contexts\";\r\n\r\nfunction MainMenu() {\r\n  const { gameState, setGameState, userName, setUserName } = useContext(\r\n    GameStateContext\r\n  );\r\n  return (\r\n    <div className=\"Menu\">\r\n      <label>Enter Your Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Ex:shireesha\"\r\n        onChange={(event) => {\r\n          setUserName(event.target.value);\r\n        }}\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          setGameState(\"playing\");\r\n        }}\r\n      >\r\n        Start Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainMenu;","export const QuestionBank = [\r\n      \r\n    {\r\n        prompt: \"Who invented Java?\",\r\n        optionA: \"James Gosling\",\r\n        optionB: \"Tim Burners Lee\",\r\n        optionC: \"Brendan Eich\",\r\n        optionD: \"Jordan Walke\",\r\n        answer: \"optionA\",\r\n      },\r\n      {\r\n        prompt: \"What is the full form of IP? \",\r\n        optionA: \"Interface program\",\r\n        optionB: \"Internet protocol\",\r\n        optionC: \"Internet program\",\r\n        optionD: \"Interface protocol\",\r\n        answer: \"optionB\",\r\n      },\r\n    {\r\n      prompt: \"Which of this is not a programming language?\",\r\n      optionA: \"Python\",\r\n      optionB: \"JavaScript\",\r\n      optionC: \"MC-03\",\r\n      optionD: \"Java\",\r\n      answer: \"optionC\",\r\n    },\r\n    {\r\n        prompt: \"One byte is equivalent to?\",\r\n        optionA: \"32 bits\",\r\n        optionB: \"4 bits\",\r\n        optionC: \"12 bits\",\r\n        optionD: \"8 bits\",\r\n        answer: \"optionD\",\r\n      },  \r\n    {\r\n      prompt: \"Which of this is not a javascript framework?\",\r\n      optionA: \"React\",\r\n      optionB: \"Angular\",\r\n      optionC: \"Java\",\r\n      optionD: \"Vue\",\r\n      answer: \"optionC\",\r\n    },\r\n    {\r\n        prompt: \"Find out the odd one?\",\r\n        optionA: \"Windows\",\r\n        optionB: \"Internet\",\r\n        optionC: \"Linux\",\r\n        optionD: \"Unix\",\r\n        answer: \"optionB\",\r\n      },\r\n      {\r\n        prompt: \"Web pages are written using?\",\r\n        optionA: \"HTML\",\r\n        optionB: \"FTP\",\r\n        optionC: \"HTTP\",\r\n        optionD: \"URL\",\r\n        answer: \"optionA\",\r\n      },\r\n      {\r\n        prompt: \"Who invented Javascript?\",\r\n        optionA: \"Jordan Walke\",\r\n        optionB: \"Brendan Eich\",\r\n        optionC: \"Guido van Rossum\",\r\n        optionD: \"James Gosling\",\r\n        answer: \"optionB\",\r\n      },\r\n      {\r\n        prompt: \"The brain of any computer system is?\",\r\n        optionA: \"ALU\",\r\n        optionB: \"Control unit\",\r\n        optionC: \"Memory\",\r\n        optionD: \"CPU\",\r\n        answer: \"optionD\",\r\n      },\r\n\r\n      {\r\n        prompt: \"The set of instructions given to the computer describes?\",\r\n        optionA: \"Agenda\",\r\n        optionB: \"Program\",\r\n        optionC: \"synopsis\",\r\n        optionD: \"Blueprint\",\r\n        answer: \"optionB\",\r\n      },   \r\n  ];","import \"../App.css\";\r\nimport { QuestionBank } from \"../Helpers/QuestionBank\";\r\nimport { useState } from \"react\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../Helpers/Contexts\";\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n  const { score, setScore, gameState, setGameState } = useContext(\r\n    GameStateContext\r\n  );\r\n\r\n  const chooseOption = (option) => {\r\n    setOptionChosen(option);\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (QuestionBank[currentQuestion].answer == optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  };\r\n\r\n  const finishQuiz = () => {\r\n    if (QuestionBank[currentQuestion].answer == optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setGameState(\"finished\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Quiz\">\r\n      <h1>{QuestionBank[currentQuestion].prompt}</h1>\r\n      <div className=\"questions\">\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionA\");\r\n          }}\r\n        >\r\n          {QuestionBank[currentQuestion].optionA}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionB\");\r\n          }}\r\n        >\r\n          {QuestionBank[currentQuestion].optionB}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionC\");\r\n          }}\r\n        >\r\n          {QuestionBank[currentQuestion].optionC}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionD\");\r\n          }}\r\n        >\r\n          {QuestionBank[currentQuestion].optionD}\r\n        </button>\r\n      </div>\r\n\r\n      {currentQuestion == QuestionBank.length - 1 ? (\r\n        <button onClick={finishQuiz} id=\"nextQuestion\">\r\n          Finish Quiz\r\n        </button>\r\n      ) : (\r\n        <button onClick={nextQuestion} id=\"nextQuestion\">\r\n          Next Question\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../Helpers/Contexts\";\r\nimport { QuestionBank } from \"../Helpers/QuestionBank\";\r\n\r\nconst EndScreen = () => {\r\n  const { score, setScore, setGameState, userName } = useContext(\r\n    GameStateContext\r\n  );\r\n\r\n  const restartQuiz = () => {\r\n    setScore(0);\r\n    setGameState(\"menu\");\r\n  };\r\n  return (\r\n    <div className=\"EndScreen\">\r\n      <h1>Quiz CompletedðŸ˜ƒ</h1>\r\n      <h3>{userName}</h3>\r\n      <h1>\r\n        {score} / {QuestionBank.length}\r\n      </h1>\r\n      <button onClick={restartQuiz}>Restart Quiz</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndScreen;","import \"./App.css\";\nimport MainMenu from \"./Components/MainMenu\";\nimport Quiz from \"./Components/Quiz\";\nimport EndScreen from \"./Components/EndScreen\";\nimport { useState } from \"react\";\nimport { GameStateContext } from \"./Helpers/Contexts\";\n\nfunction App() {\n  const [gameState, setGameState] = useState(\"menu\");\n  const [userName, setUserName] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1>Quiz App using Reactjs</h1>\n      <GameStateContext.Provider\n        value={{\n          gameState,\n          setGameState,\n          userName,\n          setUserName,\n          score,\n          setScore,\n        }}\n      >\n        {gameState === \"menu\" && <MainMenu />}\n        {gameState === \"playing\" && <Quiz />}\n        {gameState === \"finished\" && <EndScreen />}\n      </GameStateContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}